# .github/workflows/production.yml
name: Production Deployment

on:
    push:
        branches: [ production ]

jobs:
    code-quality:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'
                  extensions: mbstring, intl, xml, pgsql, pdo_pgsql
                  coverage: none

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '23'
                  cache: 'yarn'

            - name: Validate composer.json and composer.lock
              run: composer validate --strict

            - name: Install PHP dependencies
              run: composer install --prefer-dist --no-progress --no-dev --optimize-autoloader

            - name: Install JS dependencies
              run: yarn install

            - name: Run PHPStan
              run: vendor/bin/phpstan analyse

            - name: Run ESLint
              run: yarn lint

            - name: Build frontend assets
              run: yarn build

    deploy:
        needs: code-quality
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - name: Setup PHP
              uses: shivammathur/setup-php@v2
              with:
                  php-version: '8.4'
                  extensions: mbstring, intl, xml, pgsql, pdo_pgsql
                  coverage: none

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: '23'
                  cache: 'yarn'

            - name: Install PHP dependencies
              run: composer install --prefer-dist --no-progress --no-dev --optimize-autoloader

            - name: Install JS dependencies
              run: yarn install

            - name: Build frontend assets
              run: yarn build

            - name: Set up environment secrets
              run: |
                  echo "APP_ENV=prod" >> .env.local
                  echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env.local
                  echo "DATABASE_URL=${{ secrets.DATABASE_URL }}" >> .env.local
                  # Add any other necessary environment variables

            - name: Deploy to Portainer
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.HOSTINGER_HOST }}
                  username: ${{ secrets.HOSTINGER_USERNAME }}
                  key: ${{ secrets.SSH_PRIVATE_KEY }}
                  script: |
                      cd /path/to/your/portainer/project
                      git fetch
                      git checkout production
                      git pull origin production
                      docker compose -f compose.yaml -f compose.prod.yaml down
                      docker compose -f compose.yaml -f compose.prod.yaml up -d --build
                      # Add any other necessary deployment commands
